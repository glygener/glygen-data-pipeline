services:
  glygen:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: glygen-app
    volumes:
      - ./Makefile:/Makefile
      - ./conf:/conf
      - ./neo4j:/neo4j
      - $PWD/reactome/:/reactome
    working_dir: /
    networks:
      - glygennet
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=reactome

  neo4j:
    image: neo4j:4.4
    container_name: neo4j
    restart: always
    hostname: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - $PWD/scripts:/scripts
      - $PWD/neo4j/plugins:/plugins
      - $PWD/neo4j/data:/data
      - $PWD/neo4j/logs:/logs
      - $PWD/conf/:/conf/
      - $PWD/neo4j/import:/import
      - $PWD/scripts:/scripts
    entrypoint: ["/scripts/neo4j_entrypoint.sh"]
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_AUTH=neo4j/reactome
      - NEO4J_EDITION=community
      - NEO4J_dbms_connector_bolt_advertised__address=neo4j:7687
      - NEO4J_dbms_connector_bolt_listen__address=0.0.0.0:7687
      - NEO4J_dbms_connector_http_advertised__address=neo4j:7474
      - NEO4J_dbms_connector_http_listen__address=0.0.0.0:7474
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "reactome", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - glygennet

networks:
  glygennet:
    driver: bridge